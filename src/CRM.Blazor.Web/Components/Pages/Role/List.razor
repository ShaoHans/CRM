@page "/Role/List"
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.Identity
@using Microsoft.IdentityModel.Tokens
@attribute [Authorize(IdentityPermissions.Roles.Default)]
@inject DialogService DialogService
@inject NotificationService NotificationService
@inherits AbpCrudPageBase<IIdentityRoleAppService, IdentityRoleDto, Guid, GetIdentityRolesInput, IdentityRoleCreateDto, IdentityRoleUpdateDto>

<PageTitle>角色列表</PageTitle>

<RadzenCard class="rz-my-6">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap">
        @if (HasCreatePermission)
        {
            <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
                <RadzenButton Icon="add" Text="添加角色" Click="OpenCreateRoleDialog" />
            </RadzenStack>
        }
        <RadzenStack Orientation="Orientation.Vertical" style="margin-left: auto;" Gap="4px">
            <SearchTextBox PlaceHoder="角色名称" @bind-Keyword="@_keyword" SearchAsync="@_grid.Reload" />
        </RadzenStack>
    </RadzenStack>
</RadzenCard>

<RadzenDataGrid @ref="_grid" Data="@roles" AllowPaging="true" AllowSorting="true"
                PagerHorizontalAlign="HorizontalAlign.Center"
                PageSizeOptions="@pageSizeOptions" ShowPagingSummary="@showPagerSummary"
                LoadData="LoadRolesAsync" Count="@totalCount" IsLoading="@isLoading">
    <Columns>
        <RadzenDataGridColumn Title="角色名称" Property="@nameof(IdentityRoleDto.Name)">
            <Template>
                <RadzenLabel Text="@context.Name" />
                <RadzenBadge Text="默认" Visible="context.IsDefault" BadgeStyle="BadgeStyle.Success" />
                <RadzenBadge Text="公开" Visible="context.IsPublic" BadgeStyle="BadgeStyle.Info" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Title="操作" Width="160px" Sortable="false">
            <Template>
                @if (HasUpdatePermission)
                {
                    <RadzenButton Icon="edit" title="编辑" ButtonStyle="ButtonStyle.Success"
                                  Click="@(async () => await OpenEditRoleDialog(context))" />
                }

                @if (HasManagePermissionsPermission)
                {
                    <RadzenButton Icon="productivity" title="权限" ButtonStyle="ButtonStyle.Warning"
                                  Click="@(async () => await OpenAssignPermissionDialog(context))" />
                }

                @if (context.Name != "admin" && HasDeletePermission)
                {
                    <RadzenButton Icon="delete" title="删除" ButtonStyle="ButtonStyle.Danger"
                                  Click=@(async () => await ShowDeleteConfirmDialogAsync(context.Id)) />
                }
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>


