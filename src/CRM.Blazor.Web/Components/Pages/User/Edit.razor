@using Volo.Abp.Identity

<RadzenTemplateForm TItem="IdentityUserUpdateDto" Data=@model Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
    <RadzenStack Gap="2rem" class="rz-p-4 rz-p-md-12">
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="用户名 *" Component="UserName" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenTextBox Name="UserName" @bind-Value=@model.UserName Style="display: block; width: 100%;" MaxLength="IdentityUserConsts.MaxUserNameLength" />
                <RadzenRequiredValidator Component="UserName" Text="UserName is required"  Style="position: absolute" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="密码" Component="Password" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenPassword Name="Password" @bind-Value=@model.Password Style="display: block; width: 100%;" MaxLength="IdentityUserConsts.MaxPasswordLength" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="邮箱 *" Component="Email" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenTextBox Name="Email" @bind-Value=@model.Email Style="display: block; width: 100%;" MaxLength="IdentityUserConsts.MaxEmailLength" />
                <RadzenRequiredValidator Component="Email" Text="Email is required" Style="position: absolute" />
                <RadzenEmailValidator Component="Email" Text="Provide a valid email address" Style="position: absolute" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="手机号码" Component="PhoneNumber" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenTextBox Name="PhoneNumber" @bind-Value=@model.PhoneNumber Style="display: block; width: 100%;" MaxLength="IdentityUserConsts.MaxPhoneNumberLength" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="启用" Component="IsActive" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenCheckBox TValue="bool" @bind-Value=@model.IsActive Name="IsActive"  />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="账户锁定" Component="LockoutEnabled" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenCheckBox TValue="bool" @bind-Value=@model.LockoutEnabled Name="LockoutEnabled"  />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="角色" Component="RoleNames" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenDropDown TValue="IEnumerable<string>" Value="@model.RoleNames" Data=@roleNames Name="RoleNames" ValueChanged="RolesChange"
                                Multiple=true AllowClear=true Placeholder="分配角色" Chips=true Style="width: 100%;" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" class="rz-mt-4">
            <RadzenColumn Size="12" Offset="0" SizeMD="8" OffsetMD="4">
                <RadzenButton ButtonType="ButtonType.Submit" Text="保存"></RadzenButton>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Inject]
    IIdentityUserAppService UserAppService { get; set; } = default!;
    [Inject]
    NavigationManager NavigationManager { get; set; } = default!;

    [Parameter]
    public IdentityUserDto User { get; set; } = new();

    IdentityUserUpdateDto model = new();

    IList<string> roleNames = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        roleNames = (await UserAppService.GetAssignableRolesAsync())
            .Items?.Select(r => r.Name).ToArray()
            ?? [];

        var userRoles = (await UserAppService.GetRolesAsync(User.Id)).Items?.Select(r => r.Name).ToArray() ?? [];
        model = new IdentityUserUpdateDto
        {
            UserName = User.UserName,
            Email = User.Email,
            PhoneNumber = User.PhoneNumber,
            IsActive = User.IsActive,
            LockoutEnabled = User.LockoutEnabled,
            RoleNames = userRoles
        };
    }

    void RolesChange(IEnumerable<string> values)
    {
        model.RoleNames = values.ToArray();
    }

    async Task OnSubmit(IdentityUserUpdateDto model)
    {        
        await UserAppService.UpdateAsync(User.Id, model);
        NavigationManager.NavigateTo("/user/list");
    }

    void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {
    }
}
