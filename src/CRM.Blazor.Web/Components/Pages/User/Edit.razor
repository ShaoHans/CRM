@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.AspNetCore.Components
@using Volo.Abp.Identity
@inject IIdentityUserAppService UserAppService
@inherits AbpComponentBase

<RadzenTemplateForm TItem="IdentityUserUpdateDto" Data=@DialogFromOption.Model Submit=@DialogFromOption.OnSubmit>
    <RadzenStack Gap="2rem" class="rz-p-4 rz-p-md-12">
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenBadge Text="*" BadgeStyle="BadgeStyle.Danger" />
                <RadzenLabel Text="用户名" Component="UserName" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenTextBox Name="UserName" @bind-Value=@DialogFromOption.Model.UserName Style="display: block; width: 100%;" MaxLength="IdentityUserConsts.MaxUserNameLength" />
                <RadzenRequiredValidator Component="UserName" Text="UserName is required"  Style="position: absolute" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="密码" Component="Password" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenPassword Name="Password" @bind-Value=@DialogFromOption.Model.Password Style="display: block; width: 100%;" MaxLength="IdentityUserConsts.MaxPasswordLength" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenBadge Text="*" BadgeStyle="BadgeStyle.Danger" />
                <RadzenLabel Text="邮箱" Component="Email" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenTextBox Name="Email" @bind-Value=@DialogFromOption.Model.Email Style="display: block; width: 100%;" MaxLength="IdentityUserConsts.MaxEmailLength" />
                <RadzenRequiredValidator Component="Email" Text="Email is required" Style="position: absolute" />
                <RadzenEmailValidator Component="Email" Text="Provide a valid email address" Style="position: absolute" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="手机号码" Component="PhoneNumber" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenTextBox Name="PhoneNumber" @bind-Value=@DialogFromOption.Model.PhoneNumber Style="display: block; width: 100%;" MaxLength="IdentityUserConsts.MaxPhoneNumberLength" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="启用" Component="IsActive" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenCheckBox TValue="bool" @bind-Value=@DialogFromOption.Model.IsActive Name="IsActive"  />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
            <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                <RadzenLabel Text="账户锁定" Component="LockoutEnabled" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenCheckBox TValue="bool" @bind-Value=@DialogFromOption.Model.LockoutEnabled Name="LockoutEnabled"  />
            </RadzenColumn>
        </RadzenRow>
        @if (HasManagePermissionsPermission)
        {
            <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                <RadzenColumn Size="12" SizeMD="4" class="rz-text-align-start rz-text-align-md-end">
                    <RadzenLabel Text="角色" Component="RoleNames" />
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="8">
                    <RadzenDropDown TValue="IEnumerable<string>" Value="@DialogFromOption.Model.RoleNames" Data=@roleNames Name="RoleNames" ValueChanged="RolesChange"
                                    Multiple=true AllowClear=true Placeholder="分配角色" Chips=true Style="width: 100%;" />
                </RadzenColumn>
            </RadzenRow>
        }
    </RadzenStack>
    <div class="dialog-footer">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Right">
            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="保存"></RadzenButton>
            <RadzenButton Icon="cancel" Click="@DialogFromOption.OnCancel" Text="取消" ButtonStyle="ButtonStyle.Light" />
        </RadzenStack>
    </div>
</RadzenTemplateForm>

@code {
    [Parameter]
    public DialogFromOption<IdentityUserUpdateDto> DialogFromOption { get; set; } = default!;
    protected bool HasManagePermissionsPermission { get; set; }

    IList<string> roleNames = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        HasManagePermissionsPermission = await AuthorizationService.IsGrantedAsync(
            IdentityPermissions.Users.ManagePermissions
        );

        roleNames = (await UserAppService.GetAssignableRolesAsync())
            .Items?.Select(r => r.Name).ToArray()
            ?? [];

    }

    void RolesChange(IEnumerable<string> values)
    {
        DialogFromOption.Model.RoleNames = values is null ? [] : values.ToArray();
    }
}
